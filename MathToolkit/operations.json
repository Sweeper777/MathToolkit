[
  {
    "name": "Trapezium",
    "image": "trapezium",
    "category": "2D Figures",
    "inputs": [
      {
        "name": "b1",
        "description": "The upper base of the trapezium",
        "rejectFloatingPoint": false
      },
      {
        "name": "b2",
        "description": "The lower base of the trapezium",
        "rejectFloatingPoint": false
      },
      {
        "name": "h",
        "description": "The height (altitude) of the trapezium",
        "rejectFloatingPoint": false
      },
      {
        "name": "s1",
        "description": "The length of the trapezium's left side",
        "rejectFloatingPoint": false
      },
      {
        "name": "s2",
        "description": "The length of the trapezium's right side",
        "rejectFloatingPoint": false
      },
      {
        "name": "P",
        "description": "The perimeter of the trapizium",
        "rejectFloatingPoint": false
      },
      {
        "name": "A",
        "description": "The area of the trapizium",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "Area",
        "expression": "($b1 + $b2) * $h / 2"
      },
      {
        "resultName": "Perimeter",
        "expression": "$b1 + $b2 + $s1 + $s2"
      },
      {
        "resultName": "Right Side Length",
        "expression": "$P - $s1 - $b1 - $b2"
      },
      {
        "resultName": "Left Side Length",
        "expression": "$P - $s2 - $b1 - $b2"
      },
      {
        "resultName": "Lower Base",
        "expression": "$P - $s1 - $s2 - $b1"
      },
      {
        "resultName": "Area",
        "expression": "($P - $s1 - $s2) * $h / 2"
      },
      {
        "resultName": "Upper Base",
        "expression": "$P - $s1 - $s2 - $b2"
      },
      {
        "resultName": "Height",
        "expression": "($A * 2) / ($b1 + $b2)"
      },
      {
        "resultName": "Height",
        "expression": "($A * 2) / ($P - $s1 - $s2)"
      },
      {
        "resultName": "Lower Base",
        "expression": "$A * 2 / $h - $b1"
      },
      {
        "resultName": "Upper Base",
        "expression": "$A * 2 / $h - $b2"
      },
      {
        "resultName": "Perimeter",
        "expression": "$A * 2 / $h + $1 + $2"
      }
    ]
  },
  {
    "name": "Angles of Polygon",
    "category": "2D Figures",
    "image": null,
    "inputs": [
      {
        "name": "n",
        "description": "Number of interior angles of the polygon",
        "rejectFloatingPoint": true
      },
      {
        "name": "S",
        "description": "Sum of all interior angles of the polygon, in ANGLE_MEASURE",
        "rejectFloatingPoint": false
      },
      {
        "name": "i",
        "description": "The size of each interior angle of the polygon, in ANGLE_MEASURE (This is only applicable when the polygon is a regular polygon)",
        "rejectFloatingPoint": false
      },
      {
        "name": "e",
        "description": "Size of each exterior angle of the polygon, in ANGLE_MEASURE (This is only applicable when the polygon is a regular polygon)",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "Sum of Interior Angles",
        "expression": "($n - 2) * $pref180"
      },
      {
        "resultName": "Each Interior Angle (if regular)",
        "expression": "($n - 2) * $pref180 / $n"
      },
      {
        "resultName": "Each Exterior Angle (if regular)",
        "expression": "$pref180 * 2 / $n"
      },
      {
        "resultName": "Number of Angles (if regular)",
        "expression": "$S / $pref180 + 2"
      },
      {
        "resultName": "Each Interior Angle (if regular)",
        "expression": "$S / ($S / $pref180 + 2)"
      },
      {
        "resultName": "Each Exterior Angle (if regular)",
        "expression": "$pref180 * 2 / ($S / $pref180 + 2)"
      },
      {
        "resultName": "Number of Angles (if regular)",
        "expression": "-$pref180 * 2 / ($i - $pref180)"
      },
      {
        "resultName": "Sum of Interior Angles (if regular)",
        "expression": "$i * (-$pref180 * 2 / ($i - $pref180))"
      },
      {
        "resultName": "Each Exterior Angle (if regular)",
        "expression": "$pref180 * 2 / (-$pref180 * 2 / ($i - $pref180))"
      },
      {
        "resultName": "Number of Angles (if regular)",
        "expression": "$pref180 * 2 / $e"
      },
      {
        "resultName": "Sum of Interior Angles (if regular)",
        "expression": "($pref180 * 2 / $e - 2) * $pref180"
      },
      {
        "resultName": "Each Interior Angle (if regular)",
        "expression": "($pref180 * 2 / $e - 2) * $pref180 / ($pref180 * 2 / $e)"
      }
    ]
  },
  {
    "name": "Circle",
    "image": null,
    "category": "Circles",
    "inputs": [
      {
        "name": "r",
        "description": "Radius of the circle",
        "rejectFloatingPoint": false
      },
      {
        "name": "d",
        "description": "Diameter of the circle",
        "rejectFloatingPoint": false
      },
      {
        "name": "P",
        "description": "Circumference of the circle",
        "rejectFloatingPoint": false
      },
      {
        "name": "A",
        "description": "Area of the circle",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "Area",
        "expression": "$r * $r * $pi"
      },
      {
        "resultName": "Perimeter",
        "expression": "$r * 2 * $pi"
      },
      {
        "resultName": "Diameter",
        "expression": "$r * 2"
      },
      {
        "resultName": "Area",
        "expression": "($d / 2) * ($d / 2) * $pi"
      },
      {
        "resultName": "Perimeter",
        "expression": "($d / 2) * 2 * $pi"
      },
      {
        "resultName": "Radius",
        "expression": "$d / 2"
      },
      {
        "resultName": "Diameter",
        "expression": "sqrt($A / $pi) * 2"
      },
      {
        "resultName": "Perimeter",
        "expression": "sqrt($A / $pi) * 2 * $pi"
      },
      {
        "resultName": "Radius",
        "expression": "sqrt($A / $pi)"
      },
      {
        "resultName": "Diameter",
        "expression": "$P / $pi"
      },
      {
        "resultName": "Area",
        "expression": "($P / $pi / 2) ** 2 * $pi"
      },
      {
        "resultName": "Radius",
        "expression": "$P / $pi / 2"
      }
    ]
  },
  {
    "name": "Ellipse",
    "category": "Circles",
    "image": "ellipse",
    "inputs": [
      {
        "name": "a",
        "description": "Semi major axis of the ellipse",
        "rejectFloatingPoint": false
      },
      {
        "name": "b",
        "description": "Semi minor axis of the ellipse",
        "rejectFloatingPoint": false
      },
      {
        "name": "A",
        "description": "Area of the ellipse",
        "rejectFloatingPoint": false
      },
      {
        "name": "P",
        "description": "Perimeter of the ellipse, approximated by π(3(a + b) - √(3a + b)(a + 3b))",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "Area",
        "expression": "$a * $b * $pi"
      },
      {
        "resultName": "Semi Major Axis",
        "expression": "$A / ($b * $pi)"
      },
      {
        "resultName": "Semi Minor Axis",
        "expression": "$A / ($a * $pi)"
      },
      {
        "resultName": "Perimeter",
        "expression": "$pi * (3 * ($a  + $b) - sqrt((3$a + $b) * ($a + 3$b)))"
      },
      {
        "resultName": "Semi Major Axis",
        "expression": "(sqrt(-20 * $pi * $pi * $b * $b + 12 * $pi * $b * $P + 3 * $P * $P) - 4 * $pi * $b + 3 * $P) / (6 * $pi)"
      },
      {
        "resultName": "Semi Minor Axis",
        "expression": "(sqrt(-20 * $pi * $pi * $a * $a + 12 * $pi * $a * $P + 3 * $P * $P) - 4 * $pi * $a + 3 * $P) / (6 * $pi)"
      }
    ]
  },
  {
    "name": "Arcs",
    "category": "Circles",
    "image": "arc",
    "inputs": [
      {
        "name": "r",
        "description": "The radius of the arc",
        "rejectFloatingPoint": false
      },
      {
        "name": "θ",
        "description": "The angle at the center, in ANGLE_MEASURE",
        "rejectFloatingPoint": false
      },
      {
        "name": "a",
        "description": "The arc length",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "Arc Length",
        "expression": "$pi * $r * ($θ / ($pref180 * 2))"
      },
      {
        "resultName": "Angle at the Center",
        "expression": "($a * $pref180 * 2) / (2 * $pi * $r)"
      },
      {
        "resultName": "Radius",
        "expression": "$a / ($θ / ($pref180 * 2)) / (2 * $pi)"
      }
    ]
  },
  {
    "name": "Sectors",
    "category": "Circles",
    "image": "sector",
    "inputs": [
      {
        "name": "r",
        "description": "The radius of the sector",
        "rejectFloatingPoint": false
      },
      {
        "name": "θ",
        "description": "The angle at the center, in ANGLE_MEASURE",
        "rejectFloatingPoint": false
      },
      {
        "name": "A",
        "description": "The area of the sector",
        "rejectFloatingPoint": false
      }
    ],
  },
  {
    "name": "Triangle",
    "image": "triangle",
    "category": "Triangles",
    "inputs": [
      {
        "name": "b",
        "description": "The base of the triangle",
        "rejectFloatingPoint": false
      },
      {
        "name": "h",
        "description": "The height/altitude of the triangle",
        "rejectFloatingPoint": false
      },
      {
        "name": "s1",
        "description": "One of the side lengths of the triangle",
        "rejectFloatingPoint": false
      },
      {
        "name": "s2",
        "description": "One of the side lengths of the triangle",
        "rejectFloatingPoint": false
      },
      {
        "name": "s3",
        "description": "One of the side lengths  of the triangle",
        "rejectFloatingPoint": false
      },
      {
        "name": "P",
        "description": "The perimeter of the triangle",
        "rejectFloatingPoint": false
      },
      {
        "name": "A",
        "description": "The area of the triangle",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "Area",
        "expression": "$b * $h / 2"
      },
      {
        "resultName": "Base",
        "expression": "2 * $A / $h"
      },
      {
        "resultName": "Height",
        "expression": "2 * $A / $b"
      },
      {
        "resultName": "Perimeter",
        "expression": "$s1 + $s2 + $s3"
      },
      {
        "resultName": "Side Length 1",
        "expression": "$P - $s2 - $s3"
      },
      {
        "resultName": "Side Length 2",
        "expression": "$P - $s1 - $s3"
      },
      {
        "resultName": "Side Length 3",
        "expression": "$P - $s1 - $s2"
      },
      {
        "resultName": "Area",
        "expression": "sqrt((($s1 + $s2 + $s3) / 2) * ((($s1 + $s2 + $s3) / 2) - $s1) * ((($s1 + $s2 + $s3) / 2) - $s2) * ((($s1 + $s2 + $s3) / 2) - $s3))"
      }
    ]
  },
  {
    "name": "Triangle Inequality",
    "category": "Triangles",
    "image": null,
    "inputs": [
      {
        "name": "s1",
        "description": "The side length of the triangle",
        "rejectFloatingPoint": false
      },
      {
        "name": "s2",
        "description": "The side length of the triangle",
        "rejectFloatingPoint": false
      },
      {
        "name": "s3",
        "description": "The side length of the triangle",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "'Is Possible to Form Triangle'",
        "expression": "($s1 + $s2 > $s3) && ($s1 + $s3 > $s2) && ($s2 + $s3 > $s1)"
      }
    ]
  },
  {
    "name": "Right Angled Triangle",
    "category": "Triangles",
    "image": "rightAngledTriangle",
    "inputs": [
      {
        "name": "A",
        "description": "Refer to figure",
        "rejectFloatingPoint": false
      },
      {
        "name": "B",
        "description": "Refer to figure",
        "rejectFloatingPoint": false
      },
      {
        "name": "C",
        "description": "Refer to figure",
        "rejectFloatingPoint": false
      },
      {
        "name": "a",
        "description": "Refer to figure, measured in ANGLE_MEASURE",
        "rejectFloatingPoint": false
      },
      {
        "name": "b",
        "description": "Refer to figure, measured in ANGLE_MEASURE",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "C",
        "expression": "sqrt($A * $A + $B * $B)"
      },
      {
        "resultName": "B",
        "expression": "sqrt($C * $C  - $A * $A)"
      },
      {
        "resultName": "A",
        "expression": "sqrt($C * $C - $B * $B)"
      },
      {
        "resultName": "a",
        "expression": "atan($B / $A)"
      },
      {
        "resultName": "b",
        "expression": "atan($A / $B)"
      },
      {
        "resultName": "a",
        "expression": "acos($A / $C)"
      },
      {
        "resultName": "b",
        "expression": "acos($B / $C)"
      },
      {
        "resultName": "a",
        "expression": "asin($B / $C)"
      },
      {
        "resultName": "b",
        "expression": "asin($A / $C)"
      },
      {
        "resultName": "C",
        "expression": "$A / cos($a)"
      },
      {
        "resultName": "C",
        "expression": "$A / sin($b)"
      },
      {
        "resultName": "C",
        "expression": "$B / cos($b)"
      },
      {
        "resultName": "C",
        "expression": "$B / sin($a)"
      },
      {
        "resultName": "B",
        "expression": "$C * cos($b)"
      },
      {
        "resultName": "B",
        "expression": "$C * sin($a)"
      },
      {
        "resultName": "B",
        "expression": "$A / tan($b)"
      },
      {
        "resultName": "B",
        "expression": "$A * tan($a)"
      },
      {
        "resultName": "A",
        "expression": "$C * cos($a)"
      },
      {
        "resultName": "A",
        "expression": "$C * sin($b)"
      },
      {
        "resultName": "A",
        "expression": "$B / tan($a)"
      },
      {
        "resultName": "A",
        "expression": "$B * tan($b)"
      },
      {
        "resultName": "a",
        "expression": "$pref90 - $b"
      },
      {
        "resultName": "b",
        "expression": "$pref90 - $a"
      }
    ]
  },
  {
    "name": "Factors",
    "category": "Factors and Multiples",
    "image": null,
    "inputs": [
      {
        "name": "x",
        "description": "All factors of this number and its greatest common factor with y will be calculated",
        "rejectFloatingPoint": true
      },
      {
        "name": "y",
        "description": "All factors of this number and its greatest common factor with x will be calculated",
        "rejectFloatingPoint": true
      }
    ],
    "implementations": []
  },
  {
    "name": "Prime Factors",
    "category": "Factors and Multiples",
    "image": null,
    "inputs": [
      {
        "name": "x",
        "description": "The number to list all of its prime factors.",
        "rejectFloatingPoint": true
      }
    ],
    "implementations": []
  },
  {
    "name": "Factor Pairs",
    "category": "Factors and Multiples",
    "image": null,
    "inputs": [
      {
        "name": "x",
        "description": "The number to get all its factor pairs",
        "rejectFloatingPoint": true
      }
    ],
    "implementations": []
  },
  {
    "name": "Least Common Multiple",
    "category": "Factors and Multiples",
    "image": null,
    "inputs": [
      {
        "name": "x",
        "description": "The LCM of this number and y will be calculated",
        "rejectFloatingPoint": true
      },
      {
        "name": "y",
        "description": "The LCM of this number and x will be calculated",
        "rejectFloatingPoint": true
      }
    ],
    "implementations": []
  },
  {
    "name": "Prime Number",
    "category": "General Numbers",
    "image": null,
    "inputs": [
      {
        "name": "x",
        "description": "The number to test whether it is a prime.",
        "rejectFloatingPoint": true
      }
    ],
    "implementations": []
  },
  {
    "name": "Scientific Notation",
    "category": "General Numbers",
    "image": null,
    "inputs": [
      {
        "name": "n",
        "description": "This number will be converted to scientific notation",
        "rejectFloatingPoint": false
      },
      {
        "name": "s",
        "description": "This number will be converted to normal notation",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": []
  },
  {
    "name": "Degrees, Radians, Gradians",
    "category": "Misc",
    "image": null,
    "inputs": [
      {
        "name": "d",
        "description": "Angle in degrees",
        "rejectFloatingPoint": false
      },
      {
        "name": "r",
        "description": "Angle in radians",
        "rejectFloatingPoint": false
      },
      {
        "name": "g",
        "description": "Angle in gradians",
        "rejectFloatingPoint": false
      }
    ],
    "implementations": [
      {
        "resultName": "Radians",
        "expression": "$d * $pi / 180"
      },
      {
        "resultName": "Gradians",
        "expression": "$d * (10 / 9)"
      },
      {
        "resultName": "Degrees",
        "expression": "180 * $r / $pi"
      },
      {
        "resultName": "Gradians",
        "expression": "(180 * $r / $pi) * (10 / 9)"
      },
      {
        "resultName": "Degrees",
        "expression": "$g / (10 / 9)"
      },
      {
        "resultName": "Radians",
        "expression": "($g / (10 / 9)) * $pi / 180"
      }
    ]
  }
]
